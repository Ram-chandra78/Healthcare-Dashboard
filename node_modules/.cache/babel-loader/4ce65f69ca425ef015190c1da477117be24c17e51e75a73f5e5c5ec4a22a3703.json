{"ast":null,"code":"var _jsxFileName = \"H:\\\\healthcare-dashboard (1)\\\\src\\\\components\\\\layout\\\\Sidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { navigationLinks, categories } from '../../data/navigationLinks';\nimport '../../styles/Sidebar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = ({\n  isOpen,\n  isMobile\n}) => {\n  _s();\n  // Keep track of the active item\n  const [activeId, setActiveId] = useState(null);\n  const [hoveredId, setHoveredId] = useState(null);\n\n  // Initialize activeId from navigationLinks\n  useEffect(() => {\n    const active = navigationLinks.find(link => link.active);\n    if (active) {\n      setActiveId(active.id);\n    }\n  }, []);\n\n  // Handle item click\n  const handleItemClick = id => {\n    setActiveId(id);\n    // Store the active ID in localStorage to maintain state across page reloads\n    localStorage.setItem('activeNavItem', id);\n  };\n\n  // Check for active ID in localStorage on component mount\n  useEffect(() => {\n    const storedActiveId = localStorage.getItem('activeNavItem');\n    if (storedActiveId) {\n      setActiveId(parseInt(storedActiveId, 10));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `sidebar ${isOpen ? 'open' : 'closed'} ${isMobile ? 'mobile' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"health-text\",\n          children: \"Health\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"care-text\",\n          children: \"care\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 56\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"dot\",\n          children: \".\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 95\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-content\",\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"category-title\",\n          children: category.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"nav-links\",\n          children: navigationLinks.filter(link => category.links.includes(link.id)).map(link => {\n            // Determine if this item should show as active\n            const isActive = hoveredId ? link.id === hoveredId : link.id === activeId;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `nav-item ${isActive ? 'active' : ''}`,\n              onMouseEnter: () => setHoveredId(link.id),\n              onMouseLeave: () => setHoveredId(null),\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: link.path,\n                className: \"nav-link\",\n                onClick: () => handleItemClick(link.id),\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `nav-icon icon-${link.icon}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"nav-text\",\n                  children: link.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 23\n              }, this)\n            }, link.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, category.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Sidebar, \"YMFxAxRIAJIhkGbAOXJbBtJlw/k=\");\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useState","useEffect","navigationLinks","categories","jsxDEV","_jsxDEV","Sidebar","isOpen","isMobile","_s","activeId","setActiveId","hoveredId","setHoveredId","active","find","link","id","handleItemClick","localStorage","setItem","storedActiveId","getItem","parseInt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","category","name","filter","links","includes","isActive","onMouseEnter","onMouseLeave","href","path","onClick","icon","_c","$RefreshReg$"],"sources":["H:/healthcare-dashboard (1)/src/components/layout/Sidebar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { navigationLinks, categories } from '../../data/navigationLinks';\nimport '../../styles/Sidebar.css';\n\nconst Sidebar = ({ isOpen, isMobile }) => {\n  // Keep track of the active item\n  const [activeId, setActiveId] = useState(null);\n  const [hoveredId, setHoveredId] = useState(null);\n  \n  // Initialize activeId from navigationLinks\n  useEffect(() => {\n    const active = navigationLinks.find(link => link.active);\n    if (active) {\n      setActiveId(active.id);\n    }\n  }, []);\n  \n  // Handle item click\n  const handleItemClick = (id) => {\n    setActiveId(id);\n    // Store the active ID in localStorage to maintain state across page reloads\n    localStorage.setItem('activeNavItem', id);\n  };\n  \n  // Check for active ID in localStorage on component mount\n  useEffect(() => {\n    const storedActiveId = localStorage.getItem('activeNavItem');\n    if (storedActiveId) {\n      setActiveId(parseInt(storedActiveId, 10));\n    }\n  }, []);\n  return (\n    <div className={`sidebar ${isOpen ? 'open' : 'closed'} ${isMobile ? 'mobile' : ''}`}>\n      <div className=\"logo\">\n        <h2><span className=\"health-text\">Health</span><span className=\"care-text\">care</span><span className=\"dot\">.</span></h2>\n      </div>\n      \n      <div className=\"sidebar-content\">\n        {categories.map(category => (\n          <div key={category.id} className=\"category\">\n            <h3 className=\"category-title\">{category.name}</h3>\n            <ul className=\"nav-links\">\n              {navigationLinks\n                .filter(link => category.links.includes(link.id))\n                .map(link => {\n                  // Determine if this item should show as active\n                  const isActive = hoveredId ? link.id === hoveredId : link.id === activeId;\n                  \n                  return (\n                    <li \n                      key={link.id} \n                      className={`nav-item ${isActive ? 'active' : ''}`}\n                      onMouseEnter={() => setHoveredId(link.id)}\n                      onMouseLeave={() => setHoveredId(null)}\n                    >\n                      <a \n                        href={link.path} \n                        className=\"nav-link\"\n                        onClick={() => handleItemClick(link.id)}\n                      >\n                        <span className={`nav-icon icon-${link.icon}`}></span>\n                        <span className=\"nav-text\">{link.name}</span>\n                      </a>\n                    </li>\n                  );\n                })}\n            </ul>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}